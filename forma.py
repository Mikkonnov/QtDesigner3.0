# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'forma.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QMessageBox


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(420, 238)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(150, 20, 135, 41))
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.layoutWidget)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.layoutWidget)
        self.lineEdit.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit)
        self.layoutWidget1 = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget1.setGeometry(QtCore.QRect(150, 80, 135, 41))
        self.layoutWidget1.setObjectName("layoutWidget1")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.layoutWidget1)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.layoutWidget1)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.layoutWidget1)
        self.lineEdit_2.setInputMask("")
        self.lineEdit_2.setText("")
        self.lineEdit_2.setEchoMode(QtWidgets.QLineEdit.Password)
        self.lineEdit_2.setCursorPosition(0)
        self.lineEdit_2.setAlignment(QtCore.Qt.AlignCenter)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout_2.addWidget(self.lineEdit_2)
        self.widget = QtWidgets.QWidget(self.centralwidget)
        self.widget.setGeometry(QtCore.QRect(140, 140, 160, 56))
        self.widget.setObjectName("widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout_3.addLayout(self.horizontalLayout)
        self.pushButton_3 = QtWidgets.QPushButton(self.widget)
        self.pushButton_3.setObjectName("pushButton_3")
        self.verticalLayout_3.addWidget(self.pushButton_3)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 420, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Login"))
        self.label_2.setText(_translate("MainWindow", "Password"))
        self.pushButton_2.setText(_translate("MainWindow", "Cancel"))
        self.pushButton.setText(_translate("MainWindow", "Login"))
        self.pushButton_3.setText(_translate("MainWindow", "Register"))

        self.pushButton.clicked.connect(self.OpenClick)
        self.pushButton_2.clicked.connect(sys.exit)
        self.pushButton_3.clicked.connect(self.Register)

    def Register (self):
        if len(self.lineEdit.text()) % 2 != 0 or len(self.lineEdit_2.text()) % 2 != 0 or len(self.lineEdit.text()) == 0 or len(self.lineEdit_2.text()) == 0:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Error")
            msg.setInformativeText('Enter the password and login consisting of an even number of characters, but at least 2 symbols')
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            code = self.lineEdit.text()
            shifr = []

            #firstkey = "ABROK"
            #secondkey = "MODEL"

            A1 = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                  'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
                  'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                  'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
                  'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
                  'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
                  'w', 'x', 'y', 'z', '1', '2', '3', '4',
                  '5', '6', '7', '8', '9', '0', '-', '_']

            A, B, C, D = [], [], [], []

            for i in range(8):
                A.append([0] * 8)
                B.append([0] * 8)
                C.append([0] * 8)
                D.append([0] * 8)

            n = 0
            for i in range(8):
                for j in range(8):
                    A[i][j] = A1[n]
                    n += 1
            D = A

            B1 = ['B', 'U', 'j', 't', '2', '5', '0', '-',
                  'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                  'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
                  'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z',
                  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                  'i', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                  'r', 's', 'u', 'v', 'w', 'x', 'y', 'z',
                  '1', '3', '4', '6', '7', '8', '9', '_', ]

            n1 = 0
            for i in range(8):
                for j in range(8):
                    B[i][j] = B1[n1]
                    n1 += 1

            C1 = ['O', 'Q', 'r', 'x', 'B', '_', '0', '7',
                  'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                  'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S',
                  'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a',
                  'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',
                  'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                  's', 't', 'u', 'v', 'w', 'y', 'z', '1',
                  '2', '3', '4', '5', '6', '8', '9', '-']

            n2 = 0
            for i in range(8):
                for j in range(8):
                    C[i][j] = C1[n2]
                    n2 += 1
            for b in range(0, len(code), 2):
                bukva1 = code[b]
                bukva2 = code[b + 1]
                for i in range(8):
                    for j in range(8):
                        if A[i][j] == bukva1:
                            for s in range(8):
                                for t in range(8):
                                    if D[s][t] == bukva2:
                                        shifr.append(B[i][t])
                                        shifr.append(C[s][j])
            s = ''.join(map(str, shifr))

            file1 = open("forform.txt", 'r')
            f = file1.readlines()
            n = 0
            for i in f:
                if i.strip() == s:
                    n += 1
            file1.close()
            if n != 0:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("Error")
                msg.setInformativeText('You are already registered. Please, try to Login')
                msg.setWindowTitle("Error")
                msg.exec_()
            else:
                file1 = open("forform.txt", 'a')
                file1.write(s + '\n')
                file1.close()

                code = self.lineEdit_2.text()
                shifr = []

                # firstkey = "ABROK"
                # secondkey = "MODEL"

                A1 = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                      'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
                      'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                      'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
                      'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
                      'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
                      'w', 'x', 'y', 'z', '1', '2', '3', '4',
                      '5', '6', '7', '8', '9', '0', '-', '_']

                A, B, C, D = [], [], [], []

                for i in range(8):
                    A.append([0] * 8)
                    B.append([0] * 8)
                    C.append([0] * 8)
                    D.append([0] * 8)

                n = 0
                for i in range(8):
                    for j in range(8):
                        A[i][j] = A1[n]
                        n += 1
                D = A

                B1 = ['B', 'U', 'j', 't', '2', '5', '0', '-',
                      'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                      'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
                      'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z',
                      'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                      'i', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                      'r', 's', 'u', 'v', 'w', 'x', 'y', 'z',
                      '1', '3', '4', '6', '7', '8', '9', '_', ]

                n1 = 0
                for i in range(8):
                    for j in range(8):
                        B[i][j] = B1[n1]
                        n1 += 1

                C1 = ['O', 'Q', 'r', 'x', 'B', '_', '0', '7',
                      'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                      'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S',
                      'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a',
                      'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',
                      'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                      's', 't', 'u', 'v', 'w', 'y', 'z', '1',
                      '2', '3', '4', '5', '6', '8', '9', '-']

                n2 = 0
                for i in range(8):
                    for j in range(8):
                        C[i][j] = C1[n2]
                        n2 += 1
                for b in range(0, len(code), 2):
                    bukva1 = code[b]
                    bukva2 = code[b + 1]
                    for i in range(8):
                        for j in range(8):
                            if A[i][j] == bukva1:
                                for s in range(8):
                                    for t in range(8):
                                        if D[s][t] == bukva2:
                                            shifr.append(B[i][t])
                                            shifr.append(C[s][j])
                y = ''.join(map(str, shifr))
                file2 = open("forform1.txt", 'a')
                file2.write(y + '\n')
                file2.close()
                Form.show()
                MainWindow.close()

    def OpenClick (self):
        if len(self.lineEdit.text()) % 2 != 0 or len(self.lineEdit_2.text()) % 2 != 0 or len(self.lineEdit.text()) == 0 or len(self.lineEdit_2.text()) == 0:
            msg = QMessageBox()
            msg.setIcon(QMessageBox.Critical)
            msg.setText("Error")
            msg.setInformativeText('Enter the password and login consisting of an even number of characters, but at least 2 symbols')
            msg.setWindowTitle("Error")
            msg.exec_()
        else:
            code = self.lineEdit.text()
            shifr = []

            # firstkey = "ABROK"
            # secondkey = "MODEL"

            A1 = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                  'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
                  'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                  'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
                  'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
                  'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
                  'w', 'x', 'y', 'z', '1', '2', '3', '4',
                  '5', '6', '7', '8', '9', '0', '-', '_']

            A, B, C, D = [], [], [], []

            for i in range(8):
                A.append([0] * 8)
                B.append([0] * 8)
                C.append([0] * 8)
                D.append([0] * 8)

            n = 0
            for i in range(8):
                for j in range(8):
                    A[i][j] = A1[n]
                    n += 1
            D = A

            B1 = ['B', 'U', 'j', 't', '2', '5', '0', '-',
                  'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                  'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
                  'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z',
                  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                  'i', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                  'r', 's', 'u', 'v', 'w', 'x', 'y', 'z',
                  '1', '3', '4', '6', '7', '8', '9', '_', ]

            n1 = 0
            for i in range(8):
                for j in range(8):
                    B[i][j] = B1[n1]
                    n1 += 1

            C1 = ['O', 'Q', 'r', 'x', 'B', '_', '0', '7',
                  'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                  'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S',
                  'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a',
                  'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',
                  'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                  's', 't', 'u', 'v', 'w', 'y', 'z', '1',
                  '2', '3', '4', '5', '6', '8', '9', '-']

            n2 = 0
            for i in range(8):
                for j in range(8):
                    C[i][j] = C1[n2]
                    n2 += 1
            for b in range(0, len(code), 2):
                bukva1 = code[b]
                bukva2 = code[b + 1]
                for i in range(8):
                    for j in range(8):
                        if A[i][j] == bukva1:
                            for s in range(8):
                                for t in range(8):
                                    if D[s][t] == bukva2:
                                        shifr.append(B[i][t])
                                        shifr.append(C[s][j])
            spline = ''.join(map(str, shifr))

            file1 = open("forform.txt", 'r')
            f = file1.readlines()
            k = 0
            num = 0
            for i in f:
                if i.strip() == spline:
                    k += 1
                    break
                else:
                    num += 1
            file1.close()

            code = self.lineEdit_2.text()
            deshifr = []

            # firstkey = "ABROK"
            # secondkey = "MODEL"

            A1 = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                  'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
                  'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                  'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
                  'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
                  'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
                  'w', 'x', 'y', 'z', '1', '2', '3', '4',
                  '5', '6', '7', '8', '9', '0', '-', '_']

            A, B, C, D = [], [], [], []

            for i in range(8):
                A.append([0] * 8)
                B.append([0] * 8)
                C.append([0] * 8)
                D.append([0] * 8)

            n = 0
            for i in range(8):
                for j in range(8):
                    A[i][j] = A1[n]
                    n += 1
            D = A

            B1 = ['B', 'U', 'j', 't', '2', '5', '0', '-',
                  'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                  'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
                  'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z',
                  'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                  'i', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                  'r', 's', 'u', 'v', 'w', 'x', 'y', 'z',
                  '1', '3', '4', '6', '7', '8', '9', '_', ]

            n1 = 0
            for i in range(8):
                for j in range(8):
                    B[i][j] = B1[n1]
                    n1 += 1

            C1 = ['O', 'Q', 'r', 'x', 'B', '_', '0', '7',
                  'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                  'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S',
                  'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a',
                  'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',
                  'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                  's', 't', 'u', 'v', 'w', 'y', 'z', '1',
                  '2', '3', '4', '5', '6', '8', '9', '-']

            n2 = 0
            for i in range(8):
                for j in range(8):
                    C[i][j] = C1[n2]
                    n2 += 1
            for b in range(0, len(code), 2):
                bukva1 = code[b]
                bukva2 = code[b + 1]
                for i in range(8):
                    for j in range(8):
                        if A[i][j] == bukva1:
                            for s in range(8):
                                for t in range(8):
                                    if D[s][t] == bukva2:
                                        deshifr.append(B[i][t])
                                        deshifr.append(C[s][j])
            self.y = ''.join(map(str, deshifr))

            file2 = open("forform1.txt", 'r')
            d = file2.readlines()
            file2.close()
            if k > 0:
                if d[num].strip() == self.y:
                    Form.show()
                    MainWindow.close()
                else:
                    msg = QMessageBox()
                    msg.setIcon(QMessageBox.Critical)
                    msg.setText("Error")
                    msg.setInformativeText('Wrong password! Try again')
                    msg.setWindowTitle("Error")
                    msg.exec_()
            else:
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("Error")
                msg.setInformativeText('You are not registered. Please, try to Register')
                msg.setWindowTitle("Error")
                msg.exec_()

class Ui_Form(Ui_MainWindow):          #ПОЛНОСТЬЮ ПЕРЕДЕЛАТЬ!!!!!!!!!!
    def setupUi(self, Form):
        Form.setObjectName("Form")
        Form.resize(403, 212)
        self.widget = QtWidgets.QWidget(Form)
        self.widget.setGeometry(QtCore.QRect(100, 20, 221, 111))
        self.widget.setObjectName("widget")
        self.verticalLayout_3 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_3.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_3.setObjectName("verticalLayout_3")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit_2 = QtWidgets.QLineEdit(self.widget)
        self.lineEdit_2.setObjectName("lineEdit_2")
        self.verticalLayout.addWidget(self.lineEdit_2)
        self.verticalLayout_3.addLayout(self.verticalLayout)
        self.verticalLayout_2 = QtWidgets.QVBoxLayout()
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.label_2 = QtWidgets.QLabel(self.widget)
        self.label_2.setAlignment(QtCore.Qt.AlignCenter)
        self.label_2.setObjectName("label_2")
        self.verticalLayout_2.addWidget(self.label_2)
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout_2.addWidget(self.lineEdit)
        self.verticalLayout_3.addLayout(self.verticalLayout_2)
        self.widget1 = QtWidgets.QWidget(Form)
        self.widget1.setGeometry(QtCore.QRect(110, 150, 201, 31))
        self.widget1.setObjectName("widget1")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.widget1)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self.widget1)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.widget1)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)

        self.retranslateUi(Form)
        QtCore.QMetaObject.connectSlotsByName(Form)

    def retranslateUi(self, Form):
        _translate = QtCore.QCoreApplication.translate
        Form.setWindowTitle(_translate("Form", "Form"))
        self.label.setText(_translate("Form", "Enter the text to be encrypted"))
        self.label_2.setText(_translate("Form", "Encrypted text"))
        self.pushButton.setText(_translate("Form", "Encrypt"))
        self.pushButton_2.setText(_translate("Form", "Go to decipher"))

        self.pushButton.clicked.connect(self.OpenClick1)
        self.pushButton_2.clicked.connect(self.np)

    def OpenClick1(self):
        text = self.lineEdit_2.text().replace(' ', '\n')
        file1 = open("forform2.txt", 'w+')
        file1.write(text + '\n')
        file1.close()
        file = open("forform2.txt", 'r')
        f = file.readlines()
        file.close()
        cnt = 0
        file3 = open("forform3.txt", 'w+')
        for i in f:
            if len(i.strip()) % 2 != 0:
                cnt += 1
                msg = QMessageBox()
                msg.setIcon(QMessageBox.Critical)
                msg.setText("Error")
                msg.setInformativeText('The length of each word or number must be even!')
                msg.setWindowTitle("Error")
                msg.exec_()
            else:
                n = i.strip()
                code = n
                shifr = []

                # firstkey = "ABROK"
                # secondkey = "MODEL"

                A1 = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H',
                      'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P',
                      'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X',
                      'Y', 'Z', 'a', 'b', 'c', 'd', 'e', 'f',
                      'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n',
                      'o', 'p', 'q', 'r', 's', 't', 'u', 'v',
                      'w', 'x', 'y', 'z', '1', '2', '3', '4',
                      '5', '6', '7', '8', '9', '0', '-', '_']

                A, B, C, D = [], [], [], []

                for i in range(8):
                    A.append([0] * 8)
                    B.append([0] * 8)
                    C.append([0] * 8)
                    D.append([0] * 8)

                n = 0
                for i in range(8):
                    for j in range(8):
                        A[i][j] = A1[n]
                        n += 1
                D = A

                B1 = ['B', 'U', 'j', 't', '2', '5', '0', '-',
                      'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                      'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q',
                      'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z',
                      'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h',
                      'i', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                      'r', 's', 'u', 'v', 'w', 'x', 'y', 'z',
                      '1', '3', '4', '6', '7', '8', '9', '_', ]

                n1 = 0
                for i in range(8):
                    for j in range(8):
                        B[i][j] = B1[n1]
                        n1 += 1

                C1 = ['O', 'Q', 'r', 'x', 'B', '_', '0', '7',
                      'A', 'C', 'D', 'E', 'F', 'G', 'H', 'I',
                      'J', 'K', 'L', 'M', 'N', 'P', 'R', 'S',
                      'T', 'U', 'V', 'W', 'X', 'Y', 'Z', 'a',
                      'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i',
                      'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q',
                      's', 't', 'u', 'v', 'w', 'y', 'z', '1',
                      '2', '3', '4', '5', '6', '8', '9', '-']

                n2 = 0
                for i in range(8):
                    for j in range(8):
                        C[i][j] = C1[n2]
                        n2 += 1
                for b in range(0, len(code), 2):
                    bukva1 = code[b]
                    bukva2 = code[b + 1]
                    for i in range(8):
                        for j in range(8):
                            if A[i][j] == bukva1:
                                for s in range(8):
                                    for t in range(8):
                                        if D[s][t] == bukva2:
                                            shifr.append(B[i][t])
                                            shifr.append(C[s][j])
                vvtext = ''.join(map(str, shifr))
                file3.write(vvtext + '\n')
        file3.close()

        file4 = open("forform3.txt", 'r')

        text1 = file4.read().replace('\n', ' ')
        if cnt == 0:
            self.lineEdit.setText(text1)


    def np(self):
        Form3.show()
        Form.close()

class Ui_Form3(object):
    def setupUi(self, Form3):
        Form3.setObjectName("Form3")
        Form3.resize(380, 223)
        self.widget = QtWidgets.QWidget(Form3)
        self.widget.setGeometry(QtCore.QRect(80, 60, 231, 101))
        self.widget.setObjectName("widget")
        self.verticalLayout_2 = QtWidgets.QVBoxLayout(self.widget)
        self.verticalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_2.setObjectName("verticalLayout_2")
        self.verticalLayout = QtWidgets.QVBoxLayout()
        self.verticalLayout.setObjectName("verticalLayout")
        self.label = QtWidgets.QLabel(self.widget)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")
        self.verticalLayout.addWidget(self.label)
        self.lineEdit = QtWidgets.QLineEdit(self.widget)
        self.lineEdit.setObjectName("lineEdit")
        self.verticalLayout.addWidget(self.lineEdit)
        self.verticalLayout_2.addLayout(self.verticalLayout)
        self.horizontalLayout = QtWidgets.QHBoxLayout()
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton_2 = QtWidgets.QPushButton(self.widget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.pushButton = QtWidgets.QPushButton(self.widget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.verticalLayout_2.addLayout(self.horizontalLayout)

        self.retranslateUi(Form3)
        QtCore.QMetaObject.connectSlotsByName(Form3)

    def retranslateUi(self, Form3):
        _translate = QtCore.QCoreApplication.translate
        Form3.setWindowTitle(_translate("Form3", "Form"))
        self.label.setText(_translate("Form3", "Deciphered text"))
        self.pushButton_2.setText(_translate("Form3", "Decipher"))
        self.pushButton.setText(_translate("Form3", "Exit"))

        self.pushButton.clicked.connect(self.Exit1)
        self.pushButton_2.clicked.connect(self.OpenClick3)

    def OpenClick3(self):
        file = open("forform2.txt", 'r')
        f = file.readlines()
        text = ""
        for i in f:
            text += i.strip() + '\n'
        self.lineEdit.setText(text)

    def Exit1(self):
        Form1.show()
        Form3.close()
class Ui_Form1(object):
    def setupUi(self, Form1):
        Form1.setObjectName("Form1")
        Form1.resize(383, 182)
        self.layoutWidget = QtWidgets.QWidget(Form1)
        self.layoutWidget.setGeometry(QtCore.QRect(100, 110, 191, 25))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.pushButton = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton.setObjectName("pushButton")
        self.horizontalLayout.addWidget(self.pushButton)
        self.pushButton_2 = QtWidgets.QPushButton(self.layoutWidget)
        self.pushButton_2.setObjectName("pushButton_2")
        self.horizontalLayout.addWidget(self.pushButton_2)
        self.label = QtWidgets.QLabel(Form1)
        self.label.setGeometry(QtCore.QRect(90, 40, 221, 51))
        font = QtGui.QFont()
        font.setPointSize(12)
        self.label.setFont(font)
        self.label.setAlignment(QtCore.Qt.AlignCenter)
        self.label.setObjectName("label")

        self.retranslateUi(Form1)
        QtCore.QMetaObject.connectSlotsByName(Form1)

    def retranslateUi(self, Form1):
        _translate = QtCore.QCoreApplication.translate
        Form1.setWindowTitle(_translate("Form1", "Form"))
        self.pushButton.setText(_translate("Form1", "To main page"))
        self.pushButton_2.setText(_translate("Form1", "Exit"))
        self.label.setText(_translate("Form1", "Do you really want to leave?"))

        self.pushButton.clicked.connect(self.OpenClick2)
        self.pushButton_2.clicked.connect(sys.exit)

    def OpenClick2(self):
        MainWindow.show()
        Form1.close()


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    Form = QtWidgets.QWidget()
    Form1 = QtWidgets.QWidget()
    Form3 = QtWidgets.QWidget()
    ui = Ui_MainWindow()
    pi = Ui_Form()
    ri = Ui_Form1()
    yi = Ui_Form3()
    ui.setupUi(MainWindow)
    pi.setupUi(Form)
    ri.setupUi(Form1)
    yi.setupUi(Form3)
    MainWindow.show()
    sys.exit(app.exec_())